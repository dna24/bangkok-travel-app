# Generated by Django 5.0.6 on 2025-02-13 09:42

import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Admin',
            fields=[
                ('admin_id', models.AutoField(primary_key=True, serialize=False)),
                ('username', models.CharField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
            ],
        ),
        migrations.CreateModel(
            name='Place',
            fields=[
                ('place_id', models.AutoField(primary_key=True, serialize=False)),
                ('id', models.CharField(blank=True, max_length=255, null=True)),
                ('lat', models.FloatField(blank=True, null=True)),
                ('lng', models.FloatField(blank=True, null=True)),
                ('openning_detail', models.CharField(blank=True, max_length=1000, null=True)),
                ('place_name', models.CharField(max_length=50)),
                ('location', models.CharField(max_length=255)),
                ('place_type', models.CharField(choices=[('พิพิธภัณฑ์ศิลปะ', 'พิพิธภัณฑ์ศิลปะ'), ('พิพิธภัณฑ์ประวัติศาสตร์', 'พิพิธภัณฑ์ประวัติศาสตร์'), ('พิพิธภัณฑ์วิทยาศาสตร์', 'พิพิธภัณฑ์วิทยาศาสตร์'), ('พิพิธภัณฑ์ธรรมชาติวิทยา', 'พิพิธภัณฑ์ธรรมชาติวิทยา'), ('พิพิธภัณฑ์วัฒนธรรม', 'พิพิธภัณฑ์วัฒนธรรม'), ('พิพิธภัณฑ์สัตว์น้ำ', 'พิพิธภัณฑ์สัตว์น้ำ'), ('ศูนย์การเรียนรู้ท้องถิ่น', 'ศูนย์การเรียนรู้ท้องถิ่น'), ('ศูนย์การเรียนรู้ทางวิชาการ', 'ศูนย์การเรียนรู้ทางวิชาการ')], max_length=50)),
                ('place_img', models.ImageField(upload_to='place_images/')),
                ('description', models.CharField(max_length=1000)),
                ('phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('website', models.CharField(blank=True, max_length=255, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('user_name', models.CharField(max_length=50)),
                ('user_email', models.EmailField(max_length=50, unique=True)),
                ('password', models.CharField(max_length=128)),
                ('user_img', models.ImageField(default='user_images/default.png', upload_to='user_images/')),
                ('user_birthday', models.DateField()),
                ('user_gender', models.CharField(choices=[('ชาย', 'ชาย'), ('หญิง', 'หญิง'), ('อื่นๆ', 'อื่นๆ')], max_length=10)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=False)),
                ('last_login', models.DateTimeField(blank=True, default=django.utils.timezone.now, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='FavPlace',
            fields=[
                ('fav_id', models.AutoField(primary_key=True, serialize=False)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.place')),
            ],
        ),
        migrations.CreateModel(
            name='PlacesRecommend',
            fields=[
                ('rec_place_id', models.AutoField(primary_key=True, serialize=False)),
                ('rec_id', models.CharField(blank=True, max_length=255, null=True)),
                ('rec_lat', models.FloatField(blank=True, null=True)),
                ('rec_lng', models.FloatField(blank=True, null=True)),
                ('rec_openning_detail', models.CharField(blank=True, max_length=1000, null=True)),
                ('rec_place_name', models.CharField(max_length=50)),
                ('rec_location', models.CharField(max_length=255)),
                ('rec_place_type', models.CharField(choices=[('พิพิธภัณฑ์ศิลปะ', 'พิพิธภัณฑ์ศิลปะ'), ('พิพิธภัณฑ์ประวัติศาสตร์', 'พิพิธภัณฑ์ประวัติศาสตร์'), ('พิพิธภัณฑ์วิทยาศาสตร์', 'พิพิธภัณฑ์วิทยาศาสตร์'), ('พิพิธภัณฑ์ธรรมชาติวิทยา', 'พิพิธภัณฑ์ธรรมชาติวิทยา'), ('พิพิธภัณฑ์วัฒนธรรม', 'พิพิธภัณฑ์วัฒนธรรม'), ('พิพิธภัณฑ์สัตว์น้ำ', 'พิพิธภัณฑ์สัตว์น้ำ'), ('ศูนย์การเรียนรู้ท้องถิ่น', 'ศูนย์การเรียนรู้ท้องถิ่น'), ('ศูนย์การเรียนรู้ทางวิชาการ', 'ศูนย์การเรียนรู้ทางวิชาการ')], max_length=50)),
                ('rec_place_img', models.ImageField(upload_to='place_images/')),
                ('rec_description', models.CharField(max_length=1000)),
                ('rec_phone_number', models.CharField(blank=True, max_length=15, null=True)),
                ('rec_website', models.CharField(blank=True, max_length=255, null=True)),
                ('rec_status', models.CharField(default='wait', max_length=50)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Plans',
            fields=[
                ('plan_id', models.AutoField(primary_key=True, serialize=False)),
                ('plan_name', models.CharField(max_length=50)),
                ('startdate', models.DateField()),
                ('enddate', models.DateField()),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='PlanPlace',
            fields=[
                ('planplace_id', models.AutoField(primary_key=True, serialize=False)),
                ('dt_visit', models.DateTimeField()),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.place')),
                ('plan_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.plans')),
            ],
        ),
        migrations.CreateModel(
            name='Review',
            fields=[
                ('review_id', models.AutoField(primary_key=True, serialize=False)),
                ('review_rate', models.IntegerField()),
                ('review_detail', models.CharField(max_length=255)),
                ('review_status', models.CharField(default='wait', max_length=255)),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.place')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='ReviewImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('review_img', models.ImageField(blank=True, upload_to='review_images/')),
                ('review', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.review')),
            ],
        ),
        migrations.CreateModel(
            name='TravelMemo',
            fields=[
                ('memo_id', models.AutoField(primary_key=True, serialize=False)),
                ('memo_type', models.CharField(choices=[('private', 'Private'), ('public', 'Public')], default='private', max_length=50)),
                ('memo_detail', models.CharField(max_length=500)),
                ('place_id', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='myapp.place')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('report_id', models.AutoField(primary_key=True, serialize=False)),
                ('report_detail', models.CharField(max_length=300)),
                ('report_type', models.CharField(choices=[('เนื้อหาที่ไม่เหมาะสม', 'เนื้อหาที่ไม่เหมาะสม'), ('สแปม', 'สแปม'), ('ข้อมูลเท็จ', 'ข้อมูลเท็จ'), ('การละเมิดลิขสิทธิ์', 'การละเมิดลิขสิทธิ์'), ('พฤติกรรมที่ไม่เหมาะสม', 'พฤติกรรมที่ไม่เหมาะสม'), ('อื่น ๆ', 'อื่น ๆ')], max_length=50)),
                ('report_status', models.CharField(default='wait', max_length=10)),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('memo_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.travelmemo')),
            ],
        ),
        migrations.CreateModel(
            name='MemoImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('memo_img', models.ImageField(blank=True, upload_to='memo_images/')),
                ('travel_memo', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='myapp.travelmemo')),
            ],
        ),
        migrations.CreateModel(
            name='UserPreference',
            fields=[
                ('preference_id', models.AutoField(primary_key=True, serialize=False)),
                ('recommended_at', models.DateTimeField(auto_now_add=True)),
                ('score', models.FloatField()),
                ('place_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='myapp.place')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
    ]
